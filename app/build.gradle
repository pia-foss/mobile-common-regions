buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.3.72'
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-native-cocoapods'

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
    }
    packagingOptions {
        pickFirst 'META-INF/*.kotlin_module'
    }
}

kotlin {
    version = "1.0.0"
    cocoapods {
        summary = "Regions Module"
        homepage = "https://www.privateinternetaccess.com"
        frameworkName = "Regions"
    }

    targets {
        final def iOSPreset = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64
        fromPreset(iOSPreset, "iOS") {
            binaries {
                framework("a")
            }
        }
        fromPreset(presets.android, "android")
    }

    sourceSets {
        commonMain.dependencies {
            implementation 'io.ktor:ktor-client-core:1.3.2'
            implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.5-native-mt'
            implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0'
        }
        commonTest.dependencies {
            implementation 'org.jetbrains.kotlin:kotlin-test-common'
            implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
        }
        androidMain.dependencies {
            implementation 'io.ktor:ktor-client-android:1.3.2'
            implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5-native-mt'
            implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0'
        }
        iOSMain.dependencies {
            implementation 'io.ktor:ktor-client-ios:1.3.2'
            implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.5-native-mt'
            implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.20.0'
        }
    }

}

task copyFramework {
    def buildType = project.findProperty('kotlin.build.type') ?: 'DEBUG'
    dependsOn kotlin.targets.iOS.binaries.getFramework(buildType).linkTask

    doLast {
        def srcFile = kotlin.targets.iOS.binaries.getFramework(buildType).outputFile
        def targetDir = getProperty('configuration.build.dir')
        copy {
            from srcFile.parent
            into targetDir
            include 'app.framework/**'
            include 'app.framework.dSYM'
        }
    }
}
